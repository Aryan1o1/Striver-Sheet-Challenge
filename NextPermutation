import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
		// Write your code here.
        
        ArrayList<Integer> lst = new ArrayList<>();
        int arr[] = new int[permutation.size()];
        int u=0;
        for(int e : permutation)
            arr[u++] = e;
        if(arr==null || arr.length<=1)
            return permutation;
        int i = arr.length-2;
        while(i>=0 && arr[i]>=arr[i+1]) i--;
        if(i>=0)
        {
            int j = arr.length - 1;              
            while(arr[j] <= arr[i]) j--; 
            swap(arr, i, j); 
        }
        reverse(arr, i + 1, arr.length - 1);      
        int k=0;
        for(int e : arr)
            lst.add(arr[k++]);
        
        return lst;
        
        
	}
    
    public static void swap(int[] A, int i, int j) 
    {
        int tmp = A[i];
        A[i] = A[j];
        A[j] = tmp;
    }

    public static void reverse(int[] A, int i, int j) 
    {
        while(i < j) swap(A, i++, j--);
    }
}
